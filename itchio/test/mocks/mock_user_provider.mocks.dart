// Mocks generated by Mockito 5.4.4 from annotations
// in itchio/test/mock_user_provider.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i7;

import 'package:itchio/models/game.dart' as _i5;
import 'package:itchio/models/purchased_game.dart' as _i6;
import 'package:itchio/models/User.dart' as _i2;
import 'package:itchio/providers/user_provider.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUser_0 extends _i1.SmartFake implements _i2.User {
  _FakeUser_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserProvider extends _i1.Mock implements _i3.UserProvider {
  MockUserProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i4.Future<_i2.User> fetchUser(String? accessToken) => (super.noSuchMethod(
        Invocation.method(
          #fetchUser,
          [accessToken],
        ),
        returnValue: _i4.Future<_i2.User>.value(_FakeUser_0(
          this,
          Invocation.method(
            #fetchUser,
            [accessToken],
          ),
        )),
      ) as _i4.Future<_i2.User>);

  @override
  _i4.Future<List<_i5.Game>> fetchDevelopedGames(String? accessToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchDevelopedGames,
          [accessToken],
        ),
        returnValue: _i4.Future<List<_i5.Game>>.value(<_i5.Game>[]),
      ) as _i4.Future<List<_i5.Game>>);

  @override
  _i4.Future<List<_i6.PurchaseGame>> fetchPurchasedGames(String? accessToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchPurchasedGames,
          [accessToken],
        ),
        returnValue:
            _i4.Future<List<_i6.PurchaseGame>>.value(<_i6.PurchaseGame>[]),
      ) as _i4.Future<List<_i6.PurchaseGame>>);

  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
